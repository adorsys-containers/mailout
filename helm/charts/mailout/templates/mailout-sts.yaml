---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    {{- with .Values.deploymentAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    image.openshift.io/triggers: |
      [{
        "from": {
          "kind": "ImageStreamTag",
          {{- if .Values.image.namespace }}
          "namespace": "{{ .Values.image.namespace }}",
          {{- end }}
          "name":"{{- if .Values.image.stream }}{{ .Values.image.name }}:{{ default "latest" .Values.image.tag }}{{- else }}{{ template "mailout.fullname" . }}:latest{{- end }}"
        },
        "fieldPath": "spec.template.spec.containers[?(@.name==\"mailout\")].image"
      }]
  name: {{ template "mailout.fullname" . }}
  labels:
    {{- include "mailout.labels" . | nindent 4 }}
spec:
  serviceName: {{ template "mailout.fullname" . }}-sts
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "mailout.matchLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/mailout-cm.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/mailout-secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "mailout.matchLabels" . | nindent 8 }}
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.image.pullSecrets | nindent 8 }}
      {{- end }}
      containers:
      - name: mailout
        image: {{ .Capabilities.APIVersions.Has "image.openshift.io/v1" | ternary " " (printf "%s:%s" .Values.image.name .Values.image.tag) | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: smtp
          containerPort: 25
          protocol: TCP
        env:
        - name: TZ
          value: {{ .Values.timezone | quote }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 10 }}
        volumeMounts:
        - mountPath: /opt/app-root/queue/
          name: queue
        - mountPath: /opt/app-root/config/
          name: config
        {{- if .Values.openshiftServingCert }}
        - name: serving-cert-secret
          mountPath: /var/run/secrets/serving-cert-secret
        {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- with .Values.serviceAccountName }}
      serviceAccountName: {{ . | quote }}
      {{- end }}
      volumes:
      - name: config
        projected:
          sources:
          - configMap:
              name: "{{ template "mailout.fullname" . }}"
          - secret:
              name: "{{ template "mailout.fullname" . }}"
      {{- if .Values.openshiftServingCert }}
      - name: serving-cert-secret
        secret:
          secretName: "{{ template "mailout.fullname" . }}-tls"
      {{- end }}
      {{- if not (.Values.persistence.enabled) }}
      - name: queue
        emptyDir: {}
      {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: queue
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- with .Values.persistence.storageClass }}
      storageClassName: {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
{{- end }}
